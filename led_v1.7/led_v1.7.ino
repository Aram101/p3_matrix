#include <SPI.h>
//#include "GyverTimer.h"
//GTimer myTimer(US);
  //up segment
bool    RED1   =  1,
        GREEN1 =  0,
        BLUE1  =  0;
        
  //down segment
bool    RED2   =  0, 
        GREEN2 =  0, 
        BLUE2  =  1;

// define connection pins
#define R1  PB0
#define G1  PB1
#define B1  PB10
#define R2  PA8
#define G2  PA9
#define B2  PA10
#define A   PA0
#define B   PA1
#define C   PA2
#define D   PA3
#define CLK PB12
#define LAT PB13
#define OE  PB14

bool water[] = {
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x49,0x49,0x49,0x49,0x49,0x00,0x00,0x00,0x00,0x00,0x00,0x22,0x49,0x49,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x49,0x49,0x49,0x49,0x49,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x92,0xdb,0xdb,0xdb,0xdb,0xb6,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x6d,0xdb,0xff,0xdb,0xdb,0xff,0xff,0xdb,0x92,0x00,0x00,0x00,0x00,0x22,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x92,0xff,0xff,0xdb,0xdb,0xff,0xff,0xdb,0x24,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x6d,0xdb,0xff,0xdb,0x92,0x49,0x92,0xff,0xff,0xb6,0x00,0x00,0x00,0x00,0x00,0x92,0xff,0xdb,0x49,0x22,0x22,0x24,0x49,0xb6,0xff,0xdb,0x00,0x00,0x00,0x22,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xb6,0xff,0xdb,0x49,0x22,0x22,0x24,0x92,0xff,0xff,0x49,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x24,0xdb,0xff,0x6d,0x00,0x00,0x00,0x00,0x00,0xb6,0xff,0x92,0x00,0x00,0x00,0x6d,0xff,0xb6,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x6d,0x00,0x00,0x22,0xff,0xff,0x92,0x92,0x6d,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x6d,0xff,0xb6,0x00,0x00,0x00,0x00,0x00,0x00,0xb6,0xff,0xff,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x49,0xff,0xb6,0x00,0x00,0x00,0x00,0x00,0x00,0x49,0xff,0xff,0x24,0x00,0x00,0x6d,0xff,0x92,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xb6,0xff,0xb6,0x00,0x00,0x22,0xff,0xff,0xff,0xff,0xff,0xff,0x6d,0x00,0x00,0x00,0x00,0x00,0x00,0x6d,0xff,0x92,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x49,0xff,0xdb,0x24,0x00,0x00,0x00,0x00,0x00,0x24,0xff,0xff,0x24,0x00,0x00,0x6d,0xff,0x92,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x49,0xff,0xb6,0x00,0x00,0x22,0xff,0xff,0x00,0x00,0x49,0xff,0xdb,0x24,0x00,0x00,0x00,0x00,0x00,0x6d,0xff,0x92,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0xb6,0xff,0x92,0x00,0x00,0x00,0x00,0x00,0x92,0xff,0x92,0x00,0x00,0x00,0x6d,0xff,0x92,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x49,0xff,0xb6,0x00,0x00,0x22,0xff,0xff,0x00,0x00,0x00,0x6d,0xff,0x92,0x22,0x00,0x00,0x00,0x00,0x6d,0xff,0x92,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x24,0xdb,0xff,0x92,0x00,0x00,0x00,0x49,0xdb,0xdb,0x24,0x00,0x00,0x00,0x6d,0xff,0x92,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x49,0xff,0xb6,0x00,0x00,0x22,0xff,0xff,0x00,0x00,0x00,0x00,0xdb,0xff,0xdb,0x00,0x00,0x00,0x00,0x6d,0xff,0x92,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x24,0xff,0xdb,0x24,0x49,0xff,0xb6,0x49,0x00,0x00,0x00,0x00,0x6d,0xff,0x92,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x49,0xff,0xb6,0x00,0x00,0x22,0xff,0xff,0x00,0x00,0x00,0x00,0x22,0xb6,0xff,0x00,0x00,0x00,0x00,0x6d,0xff,0x92,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x24,0xdb,0x6d,0x00,0x24,0xff,0xff,0xff,0x6d,0x00,0x00,0x00,0x00,0x00,0x00,0x6d,0xff,0x92,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x49,0xff,0xb6,0x00,0x00,0x22,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x6d,0xff,0x92,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x49,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xb6,0x00,0x00,0x00,0x6d,0xff,0x92,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x49,0xff,0xb6,0x00,0x00,0x22,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x6d,0xff,0x92,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x49,0xff,0xdb,0x24,0x24,0x24,0x24,0x24,0x24,0x6d,0xff,0xff,0x6d,0x00,0x00,0x6d,0xff,0x92,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x49,0xff,0xb6,0x00,0x00,0x22,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x6d,0xff,0x92,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x24,0xdb,0x92,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x49,0xdb,0xb6,0x00,0x00,0x22,0x24,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x22,0x24,0x24,0x00,0x00,0x22,0x24,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x22,0x24,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
},

wax [] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x92,0xb6,0xb6,0xb6,0xb6,0xb6,0xb6,0xb6,0x24,0x00,0x00,0x00,0x00,0x00,0x6d,0xb6,0x49,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x49,0xb6,0x6d,0x00,0x00,0x00,0x24,0xb6,0x6d,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xdb,0xff,0xdb,0xdb,0xdb,0x24,0xb6,0xdb,0xdb,0xff,0xff,0x6d,0x00,0x00,0x00,0x00,0x92,0xff,0x6d,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x6d,0xff,0x92,0x00,0x00,0x00,0x49,0xff,0xb6,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x49,0xff,0xff,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0xb6,0xff,0xff,0x49,0x00,0x00,0x00,0x92,0xff,0x6d,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x6d,0xff,0x92,0x00,0x00,0x00,0x49,0xff,0xb6,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xdb,0xff,0x6d,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xdb,0xff,0x49,0x00,0x00,0x00,0x92,0xff,0x6d,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x6d,0xff,0x92,0x00,0x00,0x00,0x49,0xff,0xb6,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x24,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xdb,0xff,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xb6,0xff,0x49,0x00,0x00,0x00,0x92,0xff,0x6d,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x6d,0xff,0x92,0x00,0x00,0x00,0x49,0xff,0xb6,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x24,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xdb,0xff,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xb6,0xff,0x49,0x00,0x00,0x00,0x92,0xff,0x6d,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x6d,0xff,0x92,0x00,0x00,0x00,0x49,0xff,0xdb,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x6d,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xdb,0xff,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xb6,0xff,0x49,0x00,0x00,0x00,0x92,0xff,0x6d,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x6d,0xff,0x92,0x00,0x00,0x00,0x24,0x92,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0xb6,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xdb,0xff,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xb6,0xff,0x49,0x00,0x00,0x00,0x92,0xff,0x6d,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x11,0xff,0x92,0x00,0x00,0x00,0x00,0x49,0xff,0xff,0xff,0xdb,0xdb,0xdb,0xdb,0xdb,0x49,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xdb,0xff,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xb6,0xff,0x49,0x00,0x00,0x00,0x92,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x92,0xff,0x92,0x00,0x00,0x00,0x00,0x00,0x22,0x22,0x24,0xb6,0xb6,0x92,0x22,0x00,0x24,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xdb,0xff,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xb6,0xff,0x49,0x00,0x00,0x00,0x49,0xdb,0xff,0xdb,0x00,0x00,0x00,0x00,0x00,0x00,0x6d,0xff,0xdb,0x49,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x24,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xdb,0xff,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xb6,0xff,0x49,0x00,0x00,0x00,0x00,0x92,0xff,0xff,0xff,0xdb,0xdb,0xdb,0xdb,0xdb,0xdb,0xff,0x92,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x24,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x92,0xb6,0x22,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x6d,0xb6,0x24,0x00,0x00,0x00,0x00,0x00,0x11,0x6d,0xb6,0xb6,0xb6,0xb6,0xb6,0xb6,0x6d,0x11,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x22,0xb6,0xb6,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00

},

hoover [] = {
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x49,0xdb,0xb6,0x6d,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x24,0x92,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x92,0x49,0xff,0x00,0x92,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x6d,0xdb,0xb6,0xb6,0x24,0x00,0x00,0x00,0x24,0xdb,0xdb,0xdb,0x6d,0x00,0x00,0x92,0x49,0x00,0x00,0x00,0x11,0xb6,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x24,0xb6,0xff,0xff,0xb6,0x24,0x00,0x00,0x00,0x00,0x00,0x49,0xdb,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x49,0xff,0x24,0x00,0xdb,0x49,0xff,0xff,0xff,0xff,0x00,0x24,0xff,0x24,0x00,0x6d,0xdb,0xff,0x00,0xff,0xff,0x49,0x00,0x24,0xff,0x49,0x00,0xb6,0x6d,0xff,0xff,0x00,0x24,0xdb,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0xb6,0x92,0x00,0x24,0x92,0x92,0x00,0x00,0x92,0xdb,0xdb,0xdb,0xff,0xdb,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x92,0xdb,0x92,0x00,0x00,0xdb,0xdb,0xdb,0xdb,0xdb,0xdb,0x00,0x92,0x92,0x00,0x00,0x00,0xdb,0x49,0x00,0x49,0xdb,0x00,0x00,0x00,0xb6,0x92,0x00,0xb6,0xff,0xdb,0xdb,0x00,0x24,0xdb,0x00,0x00,0x00,0x49,0xb6,0x00
,0x00,0x49,0xdb,0x00,0x00,0x00,0x00,0x00,0x00,0x92,0xdb,0x24,0xff,0x49,0xdb,0xff,0xff,0x00,0x00,0x00,0x00,0x49,0xff,0x92,0x00,0x00,0x00,0x00,0xdb,0x6d,0x00,0x00,0x00,0x00,0x00,0x24,0x24,0x00,0x00,0x00,0xdb,0x49,0x00,0x6d,0xdb,0x00,0x00,0x00,0x92,0x92,0x00,0xb6,0x92,0x00,0x00,0x00,0x24,0xdb,0x00,0x00,0x00,0x6d,0xdb,0x00
,0x00,0x92,0x92,0x00,0x00,0x00,0x00,0x49,0x00,0xdb,0x24,0x00,0x00,0x24,0xdb,0x00,0x00,0x00,0x00,0x00,0x6d,0xdb,0x24,0x00,0x00,0x00,0x00,0x00,0xdb,0x49,0x00,0x00,0xff,0x49,0x00,0x00,0x00,0x00,0x00,0x00,0xdb,0x49,0x00,0x49,0xdb,0x00,0x00,0x00,0x92,0x92,0x00,0xb6,0x6d,0x00,0x00,0x00,0x11,0xdb,0x6d,0x11,0x11,0xdb,0xb6,0x00
,0x00,0x92,0xb6,0x00,0x00,0x00,0x6d,0xdb,0x00,0xff,0x24,0x00,0x00,0x49,0xdb,0x00,0x00,0x00,0x00,0x00,0xb6,0xdb,0x24,0x00,0x00,0x00,0x00,0x00,0xdb,0x49,0x00,0x00,0x24,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0xdb,0x49,0x00,0x6d,0xdb,0x00,0x00,0x00,0x92,0x92,0x00,0xb6,0x6d,0x00,0x00,0x00,0x00,0x24,0xdb,0xdb,0xb6,0xdb,0xb6,0x00
,0x00,0x24,0xff,0x49,0x00,0x00,0xdb,0x6d,0x00,0xb6,0xb6,0x11,0x11,0xdb,0x92,0x00,0x00,0x24,0x6d,0x00,0x00,0x92,0xdb,0xff,0xb6,0x49,0x00,0x00,0x92,0xdb,0x00,0x00,0x92,0xdb,0x00,0x00,0x00,0x00,0x00,0x00,0xdb,0x6d,0xff,0x6d,0xdb,0x00,0x00,0x00,0xb6,0x92,0x00,0xb6,0x6d,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x49,0xb6,0x00
,0x00,0x00,0x49,0xdb,0xb6,0xdb,0x92,0x00,0x00,0x00,0x92,0xdb,0xdb,0x92,0x00,0x00,0x00,0x6d,0xb6,0x00,0x00,0x00,0x00,0x24,0x92,0xdb,0x6d,0x00,0x00,0x92,0xdb,0xdb,0xb6,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x92,0xff,0x49,0x24,0xb6,0x00,0x00,0x00,0x6d,0x6d,0x00,0x92,0x49,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x49,0xb6,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00

},

air [] = {
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x22,0x22,0x11,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x49,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x22,0x22,0x11,0xff,0xff,0xdb,0x24,0x24,0x24,0x6d,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x92,0xff,0xff,0xff,0x49,0x24,0x24,0x24,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x22,0x22,0x11,0xff,0x00,0x00,0x00,0x00,0x00,0x22,0x22,0x11,0x24,0x00,0x00,0x00,0x00,0x00,0xb6,0xff,0xb6,0x24,0x00,0x00,0x00,0x00,0x00,0x24,0xdb,0xff,0xb6,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x11,0x22,0x11,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x22,0x22,0x22,0xff,0x00,0x00,0x00,0x00,0xdb,0xff,0xb6,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xdb,0xff,0xb6,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x22,0x22,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x11,0x22,0x11,0x49,0x00,0x00,0x00,0x00,0xdb,0xff,0xb6,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xdb,0xff,0xb6,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x22,0x22,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x11,0x22,0x11,0x11,0x00,0x00,0x00,0x00,0x49,0x6d,0x49,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xdb,0xff,0xb6,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x22,0x22,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x11,0x22,0x11,0x11,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xdb,0xff,0xdb,0x92,0x92,0x92,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x22,0x22,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x11,0x22,0x11,0x11,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xdb,0xff,0xff,0xff,0xff,0xff,0x6d,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x22,0x22,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x11,0x22,0x11,0x11,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xdb,0xff,0xdb,0x92,0x92,0x92,0x49,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x22,0x22,0xb6,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x22,0x22,0x11,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xdb,0xff,0xb6,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x22,0x22,0xb6,0x00,0x00,0x00,0x00,0x00,0x00,0x22,0x22,0x49,0x49,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xdb,0xff,0xb6,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x22,0x22,0xb6,0xff,0xff,0xdb,0x24,0x24,0x24,0x92,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xdb,0xff,0xb6,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x22,0x22,0x92,0xdb,0xdb,0xdb,0xdb,0xdb,0xdb,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xb6,0xdb,0x92,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00

},

_stop [] = { 
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x24,0xdb,0xdb,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xdb,0xdb,0x49,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x6d,0xdb,0xdb,0x00,0x00,0x00,0x00,0x00
,0x00,0x92,0xdb,0xdb,0xff,0xff,0xdb,0xdb,0xb6,0x00,0x00,0x00,0x00,0x00,0xdb,0xdb,0x49,0x00,0x00,0x00,0x00,0x92,0xdb,0xb6,0x00,0x00,0x00,0xdb,0xdb,0xff,0xff,0xdb,0xdb,0xb6,0x00,0x00,0x00,0x00,0x00,0xdb,0xdb,0x49,0x00,0x00,0x00,0x00,0x6d,0xdb,0xdb,0x00,0x00,0x00,0x00,0x00,0xdb,0xdb,0xff,0xff,0xff,0xdb,0x24,0x00,0x00,0x00
,0x00,0xb6,0xb6,0x49,0x49,0x49,0x49,0x92,0xff,0xb6,0x00,0x00,0x00,0x00,0xff,0xff,0x49,0x00,0x00,0x00,0x00,0xb6,0xff,0xdb,0x00,0x00,0x00,0xff,0xff,0x49,0x49,0x49,0x92,0xff,0xb6,0x00,0x00,0x00,0x00,0xff,0xff,0x6d,0x00,0x00,0x00,0x00,0x92,0xff,0xff,0x00,0x00,0x00,0x00,0xb6,0xff,0x6d,0x49,0x49,0x49,0xff,0xdb,0x49,0x00,0x00
,0x00,0xb6,0x92,0x00,0x00,0x00,0x00,0x6d,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0x49,0x00,0x00,0x00,0x00,0xb6,0xb6,0x49,0x00,0x00,0x00,0xb6,0x49,0x00,0x00,0x00,0x49,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0x6d,0x00,0x00,0x00,0x00,0x92,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0x24,0x00,0x00,0x00,0x49,0xdb,0x6d,0x00,0x00
,0x00,0x49,0x24,0x00,0x00,0x00,0x00,0x6d,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0x49,0x00,0x00,0x00,0x00,0xb6,0xdb,0x92,0x00,0x00,0x00,0x24,0x22,0x00,0x00,0x00,0x49,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0x6d,0x00,0x00,0x00,0x00,0x92,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0x24,0x00,0x00,0x00,0x00,0x49,0x24,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x6d,0xff,0xff,0x92,0x92,0x00,0x00,0xff,0xff,0x49,0x00,0x00,0x00,0x00,0xb6,0xff,0xdb,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x49,0xff,0xff,0x92,0x92,0x00,0x00,0xff,0xff,0x6d,0x00,0x00,0x00,0x00,0x92,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x6d,0xff,0xff,0x92,0x92,0x00,0x00,0xff,0xff,0x49,0x00,0x00,0x00,0x00,0xb6,0xff,0xff,0x6d,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x49,0xff,0xff,0x92,0x92,0x00,0x00,0xff,0xff,0x6d,0x00,0x00,0x00,0x00,0x92,0xff,0xff,0x6d,0x00,0x00,0x00,0xff,0xff,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x6d,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0x49,0x00,0x00,0x00,0x00,0xdb,0xff,0xff,0xff,0x6d,0x24,0x00,0x00,0x00,0x00,0x00,0x49,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0x6d,0x00,0x00,0x00,0x00,0xb6,0xdb,0x92,0xff,0x92,0x24,0x00,0xff,0xff,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x6d,0xff,0xff,0x00,0x00,0x00,0x00,0xb6,0xff,0x92,0x49,0x49,0x49,0xff,0xdb,0xb6,0xb6,0xff,0xff,0x49,0x00,0x00,0x00,0x00,0x00,0x49,0xff,0xff,0x00,0x00,0x00,0x00,0xb6,0xff,0x92,0x49,0x49,0x49,0xff,0xdb,0x6d,0x22,0xff,0xff,0x6d,0x00,0xff,0xff,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x49,0xb6,0xb6,0x00,0x00,0x00,0x00,0x00,0xb6,0xb6,0xb6,0xb6,0xb6,0xb6,0x24,0x00,0x00,0xb6,0xb6,0x49,0x00,0x00,0x00,0x00,0x00,0x49,0xb6,0xb6,0x00,0x00,0x00,0x00,0x00,0x92,0xb6,0xb6,0xb6,0xb6,0xb6,0x49,0x00,0x00,0xb6,0xb6,0x49,0x00,0xb6,0xb6,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00

},


dram [] = { 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x49,0x49,0x49,0x49,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x24,0x49,0x49,0x49,0x49,0x49,0x24,0x00,0x00,0x24,0x49,0x22,0x00,0x00,0x00,0x00,0x22,0x49,0x24,0x00,0x00,0x00,0x00,0x49,0x24,0x22,0x00,0x00,0x00,0x00,0x00,0x49,0x49,0x49,0x49,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x22,0xdb,0xff,0xff,0xff,0xb6,0x22,0x00,0x00,0x00,0x00,0x00,0x22,0xb6,0xff,0xff,0xff,0xff,0xff,0x6d,0x22,0x00,0x92,0xff,0x22,0x00,0x00,0x00,0x00,0x22,0xff,0x92,0x00,0x00,0x00,0x00,0xdb,0xb6,0x22,0x00,0x00,0x00,0x00,0x24,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x6d,0xff,0x24,0x00,0x00,0x00,0x49,0xff,0x24,0x00,0x00,0x00,0x24,0xff,0xff,0xdb,0x00,0x00,0x00,0xff,0x6d,0x22,0x00,0x92,0xff,0x22,0x00,0x00,0x00,0x00,0x22,0xff,0x92,0x00,0x00,0x00,0x00,0xdb,0xb6,0x22,0x00,0x00,0x00,0x00,0x24,0xff,0x49,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x6d,0xff,0x24,0x00,0x00,0x00,0x49,0xff,0x24,0x00,0x00,0x00,0x24,0xff,0x92,0x00,0x00,0x00,0x00,0xff,0xdb,0xb6,0x00,0x92,0xff,0x22,0x00,0x00,0x00,0x00,0x22,0xff,0x92,0x00,0x00,0x00,0x00,0xdb,0xb6,0x22,0x00,0x00,0x00,0x00,0x24,0xff,0x49,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x49,0xb6,0x22,0x00,0x00,0x00,0x49,0xff,0x6d,0x00,0x00,0x00,0x24,0xff,0x49,0x00,0x00,0x00,0x00,0x22,0xb6,0x22,0x00,0x92,0xff,0x22,0x00,0x00,0x00,0x00,0x22,0xff,0x92,0x00,0x00,0x00,0x00,0xdb,0xb6,0x22,0x00,0x00,0x00,0x00,0x24,0xff,0x49,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x49,0xff,0xff,0x00,0x00,0x00,0x24,0xff,0x49,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x92,0xff,0x22,0x00,0x00,0x00,0x00,0x22,0xff,0x92,0x00,0x00,0x00,0x00,0xdb,0xb6,0x22,0x00,0x00,0x00,0x00,0x24,0xff,0x49,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x49,0xff,0xff,0xff,0xff,0x00,0x24,0xff,0x49,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x92,0xff,0x22,0x00,0x00,0x00,0x00,0x22,0xff,0x92,0x00,0x00,0x00,0x00,0xdb,0xb6,0x22,0x00,0x00,0x00,0x00,0x24,0xff,0x49,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x49,0xff,0xff,0xdb,0x49,0x00,0x24,0xff,0x49,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x92,0xff,0x22,0x00,0x00,0x00,0x00,0x22,0xff,0xdb,0x00,0x00,0x00,0x00,0xdb,0xb6,0x22,0x00,0x00,0x00,0x00,0x24,0xff,0x49,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x49,0xff,0xff,0x00,0x00,0x00,0x24,0xff,0x49,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x92,0xff,0x49,0x00,0x00,0x00,0x00,0x49,0xff,0xff,0xff,0x6d,0x00,0x00,0xdb,0xdb,0x49,0x00,0x00,0x00,0x00,0x6d,0xff,0x49,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x49,0xff,0xff,0x00,0x00,0x00,0x24,0xff,0x49,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x92,0xff,0xff,0x92,0x22,0x22,0x6d,0xff,0xff,0xff,0xff,0xff,0xb6,0x00,0xdb,0xff,0xff,0x24,0x00,0x00,0xb6,0xff,0xff,0x49,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x49,0xff,0xff,0x00,0x00,0x00,0x24,0xff,0x49,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x22,0xff,0xff,0xff,0xff,0xff,0xff,0x22,0x00,0x00,0xdb,0xb6,0x00,0x00,0x49,0xff,0xff,0xff,0xff,0xff,0xdb,0x22,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x22,0x49,0x49,0x00,0x00,0x00,0x22,0x49,0x22,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x49,0x49,0x49,0x49,0x49,0x49,0x00,0x00,0x00,0x49,0x24,0x00,0x00,0x00,0x49,0x49,0x49,0x49,0x49,0x49,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00

},

foam [] ={ 
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x22,0x49,0x22,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x22,0xb6,0xb6,0x92,0x11,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x49,0x24,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xb6,0xb6,0x6d,0x11,0x44,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0x22,0x11,0x92,0xb6,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x49,0xff,0x49,0x00,0x00,0x00,0x00,0x00,0x00,0x49,0xff,0xdb,0xdb,0xdb,0xff,0x11,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0x6d,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xff,0xdb,0xdb,0xdb,0xdb,0x11,0x44,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x22,0xff,0xdb,0xdb,0xdb,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x22,0x22,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x92,0xb6,0x00,0x00,0x00,0xdb,0xdb,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0x49,0x00,0x00,0x00,0x00,0xdb,0x6d,0x00,0x00,0x00,0x00,0x92,0x11,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x11,0x11,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x92,0xdb,0x49,0x6d,0xff,0x6d,0x49,0x6d,0xdb,0x00,0x00,0x00,0xff,0x49,0x00,0x00,0x00,0x24,0xff,0x00,0x00,0x00,0xff,0x49,0x6d,0xff,0x92,0x49,0x49,0xff,0x24,0x00,0x00,0x00,0x6d,0x11,0x00,0x00,0x00,0x00,0x92,0x11,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x11,0x11,0x00,0x00,0x00,0x00
,0x00,0x00,0x24,0xff,0x00,0x00,0x24,0xff,0x24,0x00,0x00,0x6d,0xdb,0x00,0x00,0xff,0x49,0x00,0x00,0x00,0x11,0xdb,0x00,0x00,0x11,0x49,0x00,0x00,0xff,0x49,0xff,0x00,0x00,0xff,0x11,0x00,0x00,0x6d,0x11,0x00,0x00,0x00,0x00,0xb6,0x11,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x11,0x11,0x00,0x00,0x00,0x00
,0x00,0x00,0x49,0xff,0x00,0x00,0x24,0xff,0x24,0x00,0x00,0x6d,0xff,0x00,0x00,0xff,0x49,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x11,0x24,0x00,0x00,0xff,0x49,0xff,0x00,0x00,0xff,0x11,0x00,0x00,0x6d,0x11,0x00,0x00,0x00,0x00,0xff,0x49,0x00,0xb6,0xb6,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x49,0xff,0x00,0x00,0x24,0xff,0x24,0x00,0x00,0x6d,0xff,0x00,0x00,0xff,0x49,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x11,0x24,0x00,0x00,0xff,0x49,0xff,0x00,0x00,0xff,0x11,0x00,0x00,0x6d,0x11,0x00,0x00,0x00,0x00,0xff,0x49,0x00,0xb6,0xb6,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x24,0xff,0x00,0x00,0x24,0xff,0x24,0x00,0x00,0xdb,0x49,0x00,0x00,0xff,0x49,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x11,0xdb,0x00,0x00,0xff,0x49,0xff,0x00,0x00,0x6d,0x11,0x00,0x00,0x6d,0x11,0x00,0x00,0x00,0x00,0xff,0x49,0x00,0xb6,0xb6,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x6d,0xb6,0xff,0x92,0xff,0xff,0xff,0xff,0x6d,0x00,0x00,0x00,0xff,0x49,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xb6,0xff,0xff,0xff,0xff,0xff,0xff,0x6d,0x11,0x00,0x00,0x00,0x6d,0x11,0x00,0x00,0x00,0x00,0xff,0x49,0x00,0xb6,0xb6,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x22,0x6d,0x92,0xff,0xff,0x6d,0x6d,0x00,0x00,0x00,0x00,0xff,0x49,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x6d,0x6d,0xff,0xff,0x6d,0x6d,0x11,0x00,0x00,0x00,0x00,0x6d,0x11,0x00,0x00,0x00,0x00,0xff,0x49,0x00,0xb6,0xb6,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x24,0xff,0x22,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0x49,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0x6d,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x6d,0x11,0x00,0x00,0x00,0x00,0xff,0x24,0x00,0xb6,0xb6,0x11,0x11,0x11,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x22,0x22,0x22,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x11,0x11,0x00,0x00,0x00,0x00,0x11,0x11,0x00,0x22,0x22,0x11,0x11,0x11,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00

},


bonus [] = {
  0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0x00,0x00,0xff,0xff,0x22,0x00,0x00,0x00,0x00,0x00,0x22,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00
,0x00,0x22,0xff,0xff,0x22,0x22,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0x22,0x22,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0x00,0x00,0xff,0xff,0x22,0x00,0x00,0x00,0x00,0x00,0x22,0xff,0xff,0x00,0x00,0x00,0xff,0xff,0xff,0x22,0x22,0xff,0xff,0xff,0x00
,0x00,0xdb,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0x00,0x00,0x00,0xdb,0xff,0x24,0x24,0x22,0x22,0x24,0xff,0xff,0xdb,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0x00,0x00,0xff,0xff,0x22,0x00,0x00,0x00,0x00,0x00,0x22,0xff,0xff,0x00,0x00,0xdb,0xff,0xff,0x24,0x22,0x22,0x24,0x24,0xff,0xdb
,0x00,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0x00,0x00,0xdb,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x32,0x00,0x00,0xff,0xff,0xff,0xff,0xdb,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0x00,0x00,0xff,0xff,0x22,0x00,0x00,0x00,0x00,0x00,0x22,0xff,0xff,0x00,0x00,0xff,0xff,0x24,0x00,0x00,0x00,0x00,0x00,0xff,0xff
,0x00,0x49,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0x00,0x00,0xff,0xff,0x49,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xb6,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xb6,0x00,0x00,0x00,0xff,0xff,0xff,0x00,0x00,0xff,0xff,0x22,0x00,0x00,0x00,0x00,0x00,0x22,0xff,0xff,0x00,0x00,0xff,0xff,0xb6,0x00,0x00,0x00,0x00,0x00,0x49,0x49
,0x00,0x22,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0x49,0x00,0x00,0xff,0xff,0x22,0x00,0x00,0x00,0x00,0x00,0x00,0x49,0xff,0xff,0x00,0x00,0xff,0xff,0xff,0x49,0xff,0xff,0x00,0x00,0x00,0xff,0xff,0xff,0x00,0x00,0xff,0xff,0x22,0x00,0x00,0x00,0x00,0x00,0x22,0xff,0xff,0x00,0x00,0x49,0xff,0xff,0xb6,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x22,0xff,0xff,0x92,0x92,0x92,0xff,0xff,0x6d,0x00,0x00,0x00,0xff,0xff,0x22,0x00,0x00,0x00,0x00,0x00,0x00,0x22,0xff,0xff,0x00,0x00,0xff,0xff,0xff,0x00,0x6d,0xff,0x92,0x00,0x00,0xff,0xff,0xff,0x00,0x00,0xff,0xff,0x22,0x00,0x00,0x00,0x00,0x00,0x22,0xff,0xff,0x00,0x00,0x00,0x6d,0xff,0xff,0x92,0x92,0x92,0x00,0x00,0x00
,0x00,0x22,0xff,0xff,0x6d,0x6d,0x6d,0xff,0xff,0x92,0x00,0x00,0x00,0xff,0xff,0x22,0x00,0x00,0x00,0x00,0x00,0x00,0x22,0xff,0xff,0x00,0x00,0xff,0xff,0xff,0x00,0x00,0xff,0xff,0x92,0x00,0xff,0xff,0xff,0x00,0x00,0xff,0xff,0x22,0x00,0x00,0x00,0x00,0x00,0x22,0xff,0xff,0x00,0x00,0x00,0x00,0x6d,0x6d,0xff,0xff,0xff,0x92,0x92,0x00
,0x00,0x22,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0x00,0x00,0xff,0xff,0x22,0x00,0x00,0x00,0x00,0x00,0x00,0x22,0xff,0xff,0x00,0x00,0xff,0xff,0xff,0x00,0x00,0x92,0xff,0xff,0x00,0xff,0xff,0xff,0x00,0x00,0xff,0xff,0x22,0x00,0x00,0x00,0x00,0x00,0x22,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x92,0x92,0x92,0xff,0xff,0x6d
,0x00,0x22,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0x00,0x00,0xff,0xff,0x22,0x00,0x00,0x00,0x00,0x00,0x00,0x6d,0xff,0x92,0x00,0x00,0xff,0xff,0xff,0x00,0x00,0x00,0x92,0xff,0x6d,0xff,0xff,0xff,0x00,0x00,0xff,0xff,0x22,0x00,0x00,0x00,0x00,0x00,0x22,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x92,0xff,0xff
,0x00,0x22,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0x00,0x00,0xb6,0xff,0x49,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x33,0x00,0x00,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0x49,0xff,0xff,0x00,0x00,0xff,0xff,0x49,0x00,0x00,0x00,0x00,0x00,0x49,0xff,0xff,0x00,0x00,0x49,0x49,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff
,0x00,0x22,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0x00,0x00,0x22,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x22,0x00,0x00,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0xb6,0xff,0xff,0xff,0xff,0x00,0x00,0xb6,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xb6,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff
,0x00,0x22,0xff,0xff,0x24,0x24,0x24,0x24,0x24,0xff,0xff,0x00,0x00,0x00,0xdb,0xff,0x24,0x24,0x24,0x24,0x24,0xff,0xff,0xdb,0x00,0x00,0x00,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0xdb,0xff,0xff,0xff,0x00,0x00,0x22,0xff,0xff,0x24,0x24,0x24,0x24,0x24,0xff,0xff,0x22,0x00,0x00,0xdb,0xff,0x24,0x24,0x24,0x24,0x24,0x24,0xff,0xff
,0x00,0x24,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xdb,0x00,0x00,0x00,0x00,0x00,0xdb,0xff,0xff,0xff,0xff,0xff,0xff,0xdb,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0x00,0x00,0x00,0xdb,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xdb,0x00,0x00,0x00,0x00,0xdb,0xff,0xff,0xff,0xff,0xff,0xff,0xdb,0xdb
,0x00,0x0f,0x22,0x22,0x22,0x22,0x22,0x22,0x22,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00

},

welcome [] ={
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0x00
,0x00,0xff,0x00,0x00,0x00,0x00,0xff,0x00,0x00,0x00,0x00,0xff,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0x00
,0x00,0xff,0xff,0x00,0x00,0x00,0xff,0x00,0x00,0x00,0xff,0xff,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0x00,0x00,0xff,0xff,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0xff,0x00,0x00,0x00,0xff,0x00,0x00,0x00,0xff,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0xff,0x00,0x00,0xff,0xff,0xff,0x00,0x00,0xff,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0x00
,0x00,0x00,0xff,0xff,0x00,0xff,0x00,0xff,0x00,0xff,0xff,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0xff,0xff,0x00,0xff,0xff,0x00,0xff,0xff,0x00,0xff,0xff,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0x00
,0x00,0x00,0xff,0xff,0x00,0xff,0x00,0xff,0x00,0xff,0xff,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0xff,0xff,0x00,0xff,0xff,0x00,0xff,0xff,0x00,0xff,0xff,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0xff,0xff,0xff,0x00,0xff,0xff,0xff,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0x00,0x00,0xff,0xff,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0xff,0xff,0x00,0xff,0xff,0xff,0xff,0xff,0x00,0xff,0xff,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0xff,0xff,0x00,0x00,0xff,0xff,0xff,0x00,0x00,0xff,0xff,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0x00
,0x00,0x00,0x00,0x00,0xff,0x00,0x00,0x00,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0xff,0x00,0x00,0x00,0xff,0xff,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0xff,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0xff,0x00,0x00,0x00,0x00,0x00,0xff,0x00
,0x00,0xff,0xff,0x00,0x00,0x00,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0xff,0x00,0x00,0x00,0x00,0xff,0x00,0x00,0x00,0x00,0x00,0xff,0x00,0x00,0xff,0xff,0xff,0x00,0x00,0xff,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0xff,0x00,0x00,0x00,0x00,0xff,0x00,0x00,0xff,0x00,0x00,0x00,0x00,0x00,0xff,0x00
,0x00,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0x00,0x00,0xff,0x00,0x00,0x00,0xff,0x00,0x00,0x00,0x00,0xff,0x00,0x00,0x00,0x00,0x00,0xff,0x00,0x00,0xff,0xff,0xff,0x00,0x00,0xff,0x00,0x00,0x00,0xff,0x00,0x00,0xff,0x00,0x00,0x00,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0x00,0x00,0x00,0x00,0x00,0xff,0x00
,0x00,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0xff,0xff,0x00,0x00,0xff,0x00,0x00,0x00,0x00,0xff,0x00,0x00,0x00,0x00,0x00,0xff,0x00,0x00,0xff,0x00,0xff,0x00,0x00,0xff,0x00,0x00,0xff,0xff,0x00,0x00,0xff,0xff,0x00,0x00,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00
,0x00,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0xff,0xff,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0xff,0x00,0xff,0x00,0xff,0xff,0x00,0x00,0xff,0xff,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0x00
,0x00,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0xff,0x00,0x00,0x00,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0xff,0xff,0xff,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0x00,0x00,0xff,0x00,0x00,0x00,0x00,0x00,0xff,0x00
,0x00,0xff,0x00,0x00,0x00,0x00,0xff,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0xff,0x00,0x00,0x00,0x00,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0xff,0x00,0x00,0x00,0x00,0xff,0x00,0x00,0xff,0x00,0x00,0x00,0x00,0x00,0xff,0x00
,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0x00,0xff,0x00,0x00,0x00,0x00,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0x00,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0xff,0x00,0x00,0x00,0x00,0x00,0xff,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
};

volatile byte arrayik[32][64], nums[4], prev_nums[4],HP = 0,rejim = 0, lastRejim = 0;
int freeModeState = 0, prevFreeModeState = 0, counter = 0,msg = 0;
boolean  flag1 = false, freeFlag = false, first = false, welcomeFlag = 0,receiveFlag = false;
bool red_0    = 0,
     green_0  = 0,
     blue_0   = 0,
     red_1    = 0,
     green_1  = 0,
     blue_1   = 0;

void drawLineX(int, int, int, bool);
void drawLineY(int, int, int, bool);
void upDateMatrix();
void setupBuffer();
void numShow(int, int, bool);
void _numShow(int, bool);
void numToNums(int);
void _write(int);
void receiver(void);
void DUS(uint32_t);
void Delay(unsigned long long int);
void freeMode(byte, bool);
void js();
void showFreeSwitch(byte,bool);

void zero (int, bool);
void one  (int, bool);
void two  (int, bool);
void three(int, bool);
void four (int, bool);
void five (int, bool);
void six  (int, bool);
void seven(int, bool);
void eight(int, bool);
void nine (int, bool);
void _zero (int, bool);
void _one  (int, bool);
void _two  (int, bool);
void _three(int, bool);
void _four (int, bool);
void _five (int, bool);

void setup() {
  pinMode(R1,  OUTPUT);
  pinMode(G1,  OUTPUT);
  pinMode(B1,  OUTPUT);
  pinMode(R2,  OUTPUT);
  pinMode(G2,  OUTPUT);
  pinMode(B2,  OUTPUT);
  pinMode(A,   OUTPUT);
  pinMode(B,   OUTPUT);
  pinMode(C,   OUTPUT);
  pinMode(D,   OUTPUT);
  pinMode(CLK, OUTPUT);
  pinMode(LAT, OUTPUT);
  pinMode(OE,  OUTPUT);
  
  pinMode(PA7, INPUT_PULLUP); // MOSI1
  pinMode(PA5, INPUT_PULLUP); // SCK
  pinMode(PA4, INPUT_PULLUP); // SS
  
  attachInterrupt(digitalPinToInterrupt(PA4),receiver,RISING);
  
  SPI.setModule(1);
  SPI.beginTransactionSlave(SPISettings(4000, MSBFIRST, SPI_MODE0, DATA_SIZE_16BIT));
  
     red_0    = 1;
     green_0  = 0;
     blue_0   = 0;
     red_1    = 0;
     green_1  = 0;
     blue_1   = 1;

  setupBuffer();
};

void loop()
{
if(receiveFlag){
    pointer:
if(!freeFlag){
    receiveFlag = false; 
    if (rejim < 91){
        freeFlag = true;
        goto pointer;
    }
    if(rejim != lastRejim){
      lastRejim = rejim;
      showRejim(rejim); 
    }
    _write();
}
else{
     receiveFlag = false; 
     red_1    = 1;
     blue_1   = 0;
      showFreeSwitch(lastRejim,0);
      showFreeSwitch(rejim,1);
      lastRejim = rejim;
}
}
  upDateMatrix();
}

////////////////////////////////SPI RECEIVER/////////////////////////////////////
void receiver(void){
  msg = SPI.read();
  if(HP == 0){
    rejim = msg;
    HP++;
  }
  else {
    numToNums(msg);
    HP = 0;
    receiveFlag = true;
  }
}
/////////////////////////////////////////////////////////////////////////////////
void upDateMatrix() {
if(!receiveFlag){
  for (byte row = 0; row < 16; row++)
  {
    digitalWrite(OE, HIGH);
    digitalWrite(LAT, HIGH);
    digitalWrite(LAT, LOW);
    for (byte i = 0; i < 64; i++)
    {

      digitalWrite(R1, arrayik[row][i] * red_0);
      digitalWrite(G1, arrayik[row][i] * green_0);
      digitalWrite(B1, arrayik[row][i] * blue_0);
      digitalWrite(R2, arrayik[row + 16][i] * red_1);
      digitalWrite(G2, arrayik[row + 16][i] * green_1);
      digitalWrite(B2, arrayik[row + 16][i] * blue_1);
      digitalWrite(CLK, LOW);
      digitalWrite(CLK, HIGH);
    };
    digitalWrite(A, row & 0x01);
    digitalWrite(B, row & 0x02);
    digitalWrite(C, row & 0x04);
    digitalWrite(D, row & 0x08);
   // digitalWrite(OE, HIGH);
    digitalWrite(OE, LOW);
  delayMicroseconds(155);
 //Delay(100000000);
  };}
  
};

void drawLineX(int x, int y1, int y2, bool mode) {
  for (int i = y1; i < y2; i++) {
    arrayik[i][x] = mode;
  };
};

void drawLineY(int y, int x1, int x2, bool mode) {
  for (int i = x1; i < x2; i++) {
    arrayik[y][i] = mode;
  };
};

void showFreeSwitch(byte temp, bool state){
    switch(temp){
        case 83:
            freeMode(0, state);
        break;
        case 79:
            freeMode(1, state);
        break;
        case 84:
            freeMode(2, state);
        break;
        case 69:
            freeMode(3, state);
        break;
        case 70:
            freeMode(4, state);
        break;
        case 72:
            freeMode(5, state);
        break;

    }
}

void setupBuffer() {
  for (int i = 0; i < 32; i++) {
    for (int q = 0; q < 64; q++) {
      arrayik[i][q] = 0;
    }
  }
};

void _welcome(){
  int counnnt = 0;
   for (int i = 0; i < 32; i++) {
       for (int q = 0; q < 64; q++) {
          arrayik[i][q] = welcome[counnnt];
          counnnt++;
       };
    };
};

void Delay(unsigned long long int temp){
  for(unsigned long long int i = 0; i < temp; i++){
    
  };
}

void showRejim(byte mode){
 // setupBuffer();
  int counnnt = 0;
  if(mode == 106){
    for (int i = 16; i < 32; i++) {
       for (int q = 0; q < 64; q++) {
          arrayik[i][q] = water[counnnt];
          counnnt++;
       };
    };
  }
  else if (mode == 112){
    for (int i = 16; i < 32; i++) {
       for (int q = 0; q < 64; q++) {
          arrayik[i][q] = foam[counnnt];
          counnnt++;
       };
    };
  }
  else if (mode == 118){
    for (int i = 16; i < 32; i++) {
       for (int q = 0; q < 64; q++) {
          arrayik[i][q] = wax[counnnt]; //wax
          counnnt++;
       };
    };
  }
  else if (mode == 104){
    for (int i = 16; i < 32; i++) {
       for (int q = 0; q < 64; q++) {
          arrayik[i][q] = air[counnnt];
          counnnt++;
       };
    };
  }
 else if (mode == 111){
    for (int i = 16; i < 32; i++) {
       for (int q = 0; q < 64; q++) {
          arrayik[i][q] = hoover[counnnt];
          counnnt++;
       };
    };
  }                    
  else if (mode == 100){
    for (int i = 16; i < 32; i++) {
       for (int q = 0; q < 64; q++) {
          arrayik[i][q] = dram[counnnt];
          counnnt++;
       };
    };
  }
  else if (mode == 115){
   _welcome();
  }
  else if (mode == 120){
    for (int i = 16; i < 32; i++) {
       for (int q = 0; q < 64; q++) {
          arrayik[i][q] = _stop[counnnt];
          counnnt++;
       };
    };
  }
   else if (mode == 98){
    for (int i = 16; i < 32; i++) {
       for (int q = 0; q < 64; q++) {
          arrayik[i][q] = bonus[counnnt];
          counnnt++;
       };
    };
  };
};

void _write() {
  
 if(!nums[0] && !nums[1] && !nums[2] && !nums[3]){
    welcomeFlag = true;
 }
 else{
  if(welcomeFlag){
    welcomeFlag = false;
    for(int i=3 ; i < 15; i++){
      for(int q =0 ; q < 64; q ++){
        arrayik[i][q] = 0;
      }
    }
  }
  flag1 = false;
  for (int i = 0; i < 4; i++) {
    if (nums[i] == 0 && !flag1)continue ;
    else
    {
      flag1 = true;
      if (nums[i] != prev_nums[i])
        numShow(prev_nums[i], i, 0);
        numShow(nums[i], i, 1);
        prev_nums[i] = nums[i];
    };
  };
 };
};

void numShow(int num, int mov, bool mode) {
  int k = 0;
  switch (mov) {
    case 0:
      k = 1;
      break;
    case 1:
      k = 17;
      break;
    case 2:
      k = 33;
      break;
    case 3:
      k = 49;
      break;
  };
  switch (num) {
    case 0:
      zero(k, mode);
      break;
    case 1:
      one(k, mode);
      break;
    case 2:
      two(k, mode);
      break;
    case 3:
      three(k, mode);
      break;
    case 4:
      four(k, mode);
      break;
    case 5:
      five(k, mode);
      break;
    case 6:
      six(k, mode);
      break;
    case 7:
      seven(k, mode);
      break;
    case 8:
      eight(k, mode);
      break;
    case 9:
      nine(k, mode);
      break;
  };
};
void zero(int moving, bool mode) {
  drawLineX(0 + moving, 0, 15, mode);
  drawLineX(1 + moving, 0, 15, mode);
  drawLineX(2 + moving, 0, 15, mode);

  drawLineY(0, 0 + moving, 13 + moving, mode);
  drawLineY(1, 0 + moving, 13 + moving, mode);
  drawLineY(15, 0 + moving, 14 + moving, mode);

  drawLineX(11 + moving, 0, 15, mode);
  drawLineX(12 + moving, 0, 15, mode);
  drawLineX(13 + moving, 0, 15, mode);

  drawLineY(13, 0 + moving, 13 + moving, mode);
  drawLineY(14, 0 + moving, 13 + moving, mode);
  drawLineY(12, 0 + moving, 14 + moving, mode);
};

void one(int moving, bool mode) {
  drawLineX(5 + moving, 0, 16, mode);
  drawLineX(6 + moving, 0, 16, mode);
  drawLineX(7 + moving, 0, 16, mode);

  drawLineY(4, 2 + moving, 5 + moving, mode);
  drawLineY(5, 2 + moving, 5 + moving, mode);
  drawLineY(6, 2 + moving, 5 + moving, mode);

  drawLineY(13, 0 + moving, 13 + moving, mode);
  drawLineY(14, 0 + moving, 13 + moving, mode);
  drawLineY(12, 0 + moving, 13 + moving, mode);
};

void two(int moving, bool mode) {
  drawLineX(0 + moving, 8, 15, mode);
  drawLineX(1 + moving, 8, 15, mode);
  drawLineX(2 + moving, 8, 15, mode);

  drawLineY(0, 0 + moving, 13 + moving, mode);
  drawLineY(1, 0 + moving, 13 + moving, mode);
  drawLineY(15, 0 + moving, 13 + moving, mode);

  drawLineY(6, 0 + moving, 13 + moving, mode);
  drawLineY(7, 0 + moving, 13 + moving, mode);
  drawLineY(8, 0 + moving, 13 + moving, mode);

  drawLineX(10 + moving, 0, 8, mode);
  drawLineX(11 + moving, 0, 8, mode);
  drawLineX(12 + moving, 0, 8, mode);

  drawLineY(12, 0 + moving, 13 + moving, mode);
  drawLineY(13, 0 + moving, 13 + moving, mode);
  drawLineY(14, 0 + moving, 13 + moving, mode);
};

void three(int moving, bool mode) {
  
  drawLineY(0, 0 + moving, 13 + moving, mode);
  drawLineY(1, 0 + moving, 13 + moving, mode);
  drawLineY(15, 0 + moving, 13 + moving, mode);

  drawLineY(6, 3 + moving, 13 + moving, mode);
  //drawLineY(13, 0 + moving, 13 + moving, mode);
  drawLineY(7, 3 + moving, 13 + moving, mode);

  drawLineX(11 + moving, 0, 16, mode);
  drawLineX(12 + moving, 0, 16, mode);
  drawLineX(13 + moving, 0, 16, mode);

  drawLineY(12, 0 + moving, 13 + moving, mode);
  drawLineY(13, 0 + moving, 13 + moving, mode);
  drawLineY(14, 0 + moving, 13 + moving, mode);
};

void four(int moving, bool mode) {
  drawLineX(11 + moving, 0, 16, mode);
  drawLineX(12 + moving, 0, 16, mode);
  drawLineX(13 + moving, 0, 16, mode);


  drawLineY(6, 0 + moving, 13 + moving, mode);
  drawLineY(7, 0 + moving, 13 + moving, mode);
  drawLineY(8, 0 + moving, 14 + moving, mode);

  drawLineX(0 + moving, 0, 8, mode);
  drawLineX(1 + moving, 0, 8, mode);
  drawLineX(2 + moving, 0, 8, mode);
  drawLineY(15,0 + moving, 3 + moving, mode);


}

void five(int moving, bool mode) {
  drawLineX(11 + moving, 8, 15, mode);
  drawLineX(12 + moving, 8, 15, mode);
  drawLineX(13 + moving, 8, 15, mode);

  drawLineX(0 + moving, 0, 8, mode);
  drawLineX(1 + moving, 0, 8, mode);
  drawLineX(2 + moving, 0, 8, mode);

  drawLineY(0, 0 + moving, 14 + moving, mode);
  drawLineY(1, 0 + moving, 14 + moving, mode);
  drawLineY(15, 0 + moving, 14 + moving, mode);

  drawLineY(6, 0 + moving, 14 + moving, mode);
  drawLineY(7, 0 + moving, 14 + moving, mode);
  drawLineY(8, 0 + moving, 14 + moving, mode);

  drawLineY(12, 0 + moving, 13 + moving, mode);
  drawLineY(13, 0 + moving, 13 + moving, mode);
  drawLineY(14, 0 + moving, 13 + moving, mode);


}

void six(int moving, bool mode) {
  drawLineX(11 + moving, 8, 15, mode);
  drawLineX(12 + moving, 8, 15, mode);
  drawLineX(13 + moving, 8, 15, mode);

  drawLineX(0 + moving, 0, 15, mode);
  drawLineX(1 + moving, 0, 15, mode);
  drawLineX(2 + moving, 0, 15, mode);

  drawLineY(0, 0 + moving, 14 + moving, mode);
  drawLineY(1, 0 + moving, 14 + moving, mode);
  drawLineY(15, 0 + moving, 14 + moving, mode);

  drawLineY(6, 0 + moving, 14 + moving, mode);
  drawLineY(7, 0 + moving, 14 + moving, mode);
  drawLineY(8, 0 + moving, 14 + moving, mode);

  drawLineY(12, 0 + moving, 13 + moving, mode);
  drawLineY(13, 0 + moving, 13 + moving, mode);
  drawLineY(14, 0 + moving, 13 + moving, mode);
}

void seven(int moving, bool mode) {
  drawLineY(0, 0 + moving, 13 + moving, mode);
  drawLineY(1, 0 + moving, 13 + moving, mode);
  drawLineY(15, 0 + moving, 13 + moving, mode);

  drawLineX(11 + moving, 0, 15, mode);
  drawLineX(12 + moving, 0, 15, mode);
  drawLineX(13 + moving, 0, 16, mode);
};

void eight(int moving, bool mode) {
  drawLineX(0 + moving, 0, 16, mode);
  drawLineX(1 + moving, 0, 16, mode);
  drawLineX(2 + moving, 0, 16, mode);

  drawLineY(0, 0 + moving, 13 + moving, mode);
  drawLineY(1, 0 + moving, 13 + moving, mode);
  drawLineY(15, 0 + moving, 13 + moving, mode);

  drawLineX(11 + moving, 0, 16, mode);
  drawLineX(12 + moving, 0, 16, mode);
  drawLineX(13 + moving, 0, 16, mode);

  drawLineY(6, 0 + moving, 13 + moving, mode);
  drawLineY(7, 0 + moving, 13 + moving, mode);
  drawLineY(8, 0 + moving, 13 + moving, mode);

  drawLineY(12, 0 + moving, 13 + moving, mode);
  drawLineY(13, 0 + moving, 13 + moving, mode);
  drawLineY(14, 0 + moving, 13 + moving, mode);
};

void nine(int moving, bool mode) {
  drawLineX(0 + moving, 0, 6, mode);
  drawLineX(1 + moving, 0, 7, mode);
  drawLineX(2 + moving, 0, 8, mode);

  drawLineY(0, 0 + moving, 13 + moving, mode);
  drawLineY(1, 0 + moving, 13 + moving, mode);
  drawLineY(15, 0 + moving, 13 + moving, mode);

  drawLineX(11 + moving, 0, 16, mode);
  drawLineX(12 + moving, 0, 16, mode);
  drawLineX(13 + moving, 0, 16, mode);

  drawLineY(6, 0 + moving, 13 + moving, mode);
  drawLineY(7, 0 + moving, 13 + moving, mode);
  drawLineY(8, 0 + moving, 13 + moving, mode);

  drawLineY(12, 0 + moving, 13 + moving, mode);
  drawLineY(13, 0 + moving, 13 + moving, mode);
  drawLineY(14, 0 + moving, 13 + moving, mode);
};
void js() {
  drawLineX(15, 0, 27, 1);
  drawLineX(16, 0, 28, 1);
  drawLineX(17, 0, 29, 1);
  drawLineX(18, 0, 28, 1);
  drawLineX(19, 0, 27, 1);

  drawLineY(26, 4, 18, 1);
  drawLineY(27, 3, 18, 1);
  drawLineY(28, 2, 17, 1);
  drawLineY(29, 1, 17, 1);
  drawLineY(30, 0, 16, 1);
  drawLineY(31, 15, 20, 1);

  drawLineY(15, 19, 39, 1);
  drawLineY(0, 19, 38, 1);
  drawLineY(1, 19, 37, 1);
  drawLineY(2, 19, 36, 1);
  drawLineY(3, 19, 35, 1);

  drawLineX(21, 5, 10, 1);
  drawLineX(22, 5, 11, 1);
  drawLineX(23, 5, 12, 1);
  drawLineX(24, 5, 13, 1);
  drawLineX(25, 5, 14, 1);

  drawLineY(10, 25, 35, 1);
  drawLineY(11, 25, 36, 1);
  drawLineY(12, 25, 37, 1);
  drawLineY(13, 25, 38, 1);
  drawLineY(14, 26, 39, 1);

  drawLineX(35, 14, 30, 1);
  drawLineX(36, 14, 29, 1);
  drawLineX(37, 14, 28, 1);
  drawLineX(38, 14, 27, 1);
  drawLineX(39, 16, 26, 1);

  drawLineY(31, 35, 40, 1);

  drawLineY(26, 21, 35, 1);
  drawLineY(27, 20, 35, 1);
  drawLineY(28, 19, 35, 1);
  drawLineY(29, 18, 35, 1);
  drawLineY(30, 17, 35, 1);
};

void freeMode(byte temp, bool mode) {
  js();
  _numShow(temp, mode);
};

void numToNums(int temp){
  nums[3] = temp % 10;
  temp /= 10;
  nums[2] = temp % 10;
  temp /= 10;
  nums[1] = temp % 10;
  temp /= 10;
  nums[0] = temp % 10;

}

void _zero(int moving, bool mode) {
  drawLineX(0 + moving, 0, 32, mode);
  drawLineX(1 + moving, 0, 32, mode);
  drawLineX(2 + moving, 0, 32, mode);

  drawLineY(0, 0 + moving, 13 + moving, mode);
  drawLineY(1, 0 + moving, 13 + moving, mode);
  drawLineY(15, 0 + moving, 14 + moving, mode);

  drawLineX(11 + moving, 0, 32, mode);
  drawLineX(12 + moving, 0, 32, mode);
  drawLineX(13 + moving, 0, 32, mode);

  drawLineY(29, 0 + moving, 13 + moving, mode);
  drawLineY(28, 0 + moving, 13 + moving, mode);
  drawLineY(30, 0 + moving, 14 + moving, mode);
};

void _one(int moving, bool mode) {
  drawLineX(5 + moving, 0, 32, mode);
  drawLineX(6 + moving, 0, 32, mode);
  drawLineX(7 + moving, 0, 32, mode);
  drawLineX(4 + moving, 0, 32, mode);
  
  drawLineY(6, 0 + moving, 5 + moving, mode);
  drawLineY(7, 0 + moving, 5 + moving, mode);
  drawLineY(8, 0 + moving, 5 + moving, mode);
  
  drawLineY(27, -3 + moving, 15 + moving, mode);
  drawLineY(28, -3 + moving, 15 + moving, mode);
  drawLineY(29, -3 + moving, 15 + moving, mode);
  drawLineY(30, -3 + moving, 15 + moving, mode);
};

void _two(int moving, bool mode) {
  drawLineX(0 + moving, 16, 32, mode);
  drawLineX(1 + moving, 16, 32, mode);
  drawLineX(2 + moving, 16, 32, mode);
  drawLineX(-1 + moving, 16, 32, mode);
  
  drawLineY(0, -1 + moving, 15 + moving, mode);
  drawLineY(1, -1 + moving, 15 + moving, mode);
  drawLineY(2, -1 + moving, 15 + moving, mode);
  drawLineY(15, -1 + moving, 15 + moving, mode);

  drawLineY(12, -1 + moving, 15 + moving, mode);
  drawLineY(13, -1 + moving, 15 + moving, mode);
  drawLineY(14, -1 + moving, 15 + moving, mode);
  drawLineY(31, -1 + moving, 15 + moving, mode);

  drawLineX(11 + moving, 0, 14, mode);
  drawLineX(12 + moving, 0, 14, mode);
  drawLineX(13 + moving, 0, 14, mode);
  drawLineX(14 + moving, 0, 14, mode);
  
  drawLineY(27, 0 + moving, 15 + moving, mode);
  drawLineY(28, 0 + moving, 15 + moving, mode);
  drawLineY(29, 0 + moving, 15 + moving, mode);
  drawLineY(30, -1 + moving, 15 + moving, mode);
};

void _three(int moving, bool mode) {
  
  drawLineY(0, -1 + moving, 13 + moving, mode);
  drawLineY(1,  -1+ moving, 13 + moving, mode);
  drawLineY(2, -1 + moving, 13 + moving, mode);
  drawLineY(15, -1 + moving, 13 + moving, mode);

  drawLineY(13, 1 + moving, 13 + moving, mode);
  drawLineY(31, 1 + moving, 13 + moving, mode);
  drawLineY(14, 1 + moving, 13 + moving, mode);

  drawLineX(11 + moving, 0, 32, mode);
  drawLineX(12 + moving, 0, 32, mode);
  drawLineX(13 + moving, 0, 32, mode);
  drawLineX(14 + moving, 0, 32, mode);
  
  drawLineY(27, -1 + moving, 13 + moving, mode);
  drawLineY(28, -1 + moving, 13 + moving, mode);
  drawLineY(29, -1 + moving, 13 + moving, mode);
  drawLineY(30, -1 + moving, 13 + moving, mode);
};

void _four(int moving, bool mode) {
  drawLineX(11 + moving, 0, 32, mode);
  drawLineX(12 + moving, 0, 32, mode);
  drawLineX(13 + moving, 0, 32, mode);
  drawLineX(14 + moving, 0, 32, mode);

  drawLineY(12, -1 + moving, 13 + moving, mode);
  drawLineY(13, -1 + moving, 13 + moving, mode);
  drawLineY(14, -1 + moving, 13 + moving, mode);
  drawLineY(31, -1 + moving, 14 + moving, mode);
  
  drawLineX(-1 + moving, 0, 16, mode);
  drawLineX(0 + moving, 0, 16, mode);
  drawLineX(1 + moving, 0, 16, mode);
  drawLineX(2 + moving, 0, 16, mode);
}

void _five(int moving, bool mode) {
  drawLineX(11 + moving, 16, 32, mode);
  drawLineX(12 + moving, 16, 32, mode);
  drawLineX(13 + moving, 16, 32, mode);
  drawLineX(14 + moving, 16, 32, mode);

  drawLineX(-1 + moving, 0, 15, mode);
  drawLineX(0 + moving, 0, 15, mode);
  drawLineX(1 + moving, 0, 15, mode);
  drawLineX(2 + moving, 0, 15, mode);

  drawLineY(0, -1 + moving, 15 + moving, mode);
  drawLineY(1, -1 + moving, 15 + moving, mode);
  drawLineY(2, -1 + moving, 15 + moving, mode);
  drawLineY(15, -1 + moving, 15 + moving, mode);

  drawLineY(31, -1 + moving, 15 + moving, mode);
  drawLineY(13, -1 + moving, 15 + moving, mode);
  drawLineY(14, -1 + moving, 15 + moving, mode);
  drawLineY(16, -1 + moving, 15 + moving, mode);

  drawLineY(27, -1 + moving, 13 + moving, mode);
  drawLineY(28, -1 + moving, 13 + moving, mode);
  drawLineY(29, -1 + moving, 13 + moving, mode);
  drawLineY(30, -1 + moving, 13 + moving, mode);


}

void _numShow(int num, bool mode) {
  switch (num) {
    case 0:
      _zero(49, mode);
      break;
    case 1:
      _one(49, mode);
      break;
    case 2:
      _two(49, mode);
      break;
    case 3:
      _three(49, mode);
      break;
    case 4:
      _four(49, mode);
      break;
    case 5:
      _five(49, mode);
      break;
  };
};
